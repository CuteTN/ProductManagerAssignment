// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManager.DAL;

namespace ProductManager.Migrations
{
  [DbContext(typeof(Context))]
  [Migration("20210906105439_MoreModels2")]
  partial class MoreModels2
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("Relational:MaxIdentifierLength", 128)
          .HasAnnotation("ProductVersion", "5.0.9")
          .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

      modelBuilder.Entity("CategoryProduct", b =>
          {
            b.Property<int>("CategoriesId")
                      .HasColumnType("int");

            b.Property<int>("ProductsId")
                      .HasColumnType("int");

            b.HasKey("CategoriesId", "ProductsId");

            b.HasIndex("ProductsId");

            b.ToTable("CategoryProduct");
          });

      modelBuilder.Entity("ProductManager.Models.Category", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int")
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("Name")
                      .IsRequired()
                      .HasMaxLength(250)
                      .HasColumnType("nvarchar(250)");

            b.HasKey("Id");

            b.ToTable("Categories");
          });

      modelBuilder.Entity("ProductManager.Models.Product", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int")
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("Description")
                      .HasMaxLength(250)
                      .HasColumnType("nvarchar(250)");

            b.Property<DateTime?>("DiscontinuedDate")
                      .HasColumnType("datetime2");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasMaxLength(250)
                      .HasColumnType("nvarchar(250)");

            b.Property<double?>("Price")
                      .HasColumnType("float");

            b.Property<short?>("Rating")
                      .HasColumnType("smallint");

            b.Property<DateTime?>("ReleaseDate")
                      .HasColumnType("datetime2");

            b.Property<int?>("SupplierId")
                      .HasColumnType("int");

            b.HasKey("Id");

            b.HasIndex("SupplierId");

            b.ToTable("Products");
          });

      modelBuilder.Entity("ProductManager.Models.ProductDetail", b =>
          {
            b.Property<int>("ProductId")
                      .HasColumnType("int");

            b.Property<string>("Details")
                      .HasColumnType("nvarchar(max)");

            b.HasKey("ProductId");

            b.ToTable("ProductDetails");
          });

      modelBuilder.Entity("ProductManager.Models.Supplier", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int")
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("Address")
                      .IsRequired()
                      .HasMaxLength(250)
                      .HasColumnType("nvarchar(250)");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasMaxLength(250)
                      .HasColumnType("nvarchar(250)");

            b.HasKey("Id");

            b.ToTable("Suppliers");
          });

      modelBuilder.Entity("CategoryProduct", b =>
          {
            b.HasOne("ProductManager.Models.Category", null)
                      .WithMany()
                      .HasForeignKey("CategoriesId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("ProductManager.Models.Product", null)
                      .WithMany()
                      .HasForeignKey("ProductsId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("ProductManager.Models.Product", b =>
          {
            b.HasOne("ProductManager.Models.Supplier", "Supplier")
                      .WithMany()
                      .HasForeignKey("SupplierId");

            b.Navigation("Supplier");
          });

      modelBuilder.Entity("ProductManager.Models.ProductDetail", b =>
          {
            b.HasOne("ProductManager.Models.Product", "Product")
                      .WithOne("ProductDetail")
                      .HasForeignKey("ProductManager.Models.ProductDetail", "ProductId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("Product");
          });

      modelBuilder.Entity("ProductManager.Models.Product", b =>
          {
            b.Navigation("ProductDetail");
          });
#pragma warning restore 612, 618
    }
  }
}
